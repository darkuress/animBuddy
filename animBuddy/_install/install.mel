python("\n\
import os\n\
import sys\n\
from maya import cmds\n\
from datetime import datetime, timedelta\n\
import glob\n\
import urllib2\n\
import tempfile\n\
import shutil\n\
\n\
import sys\n\
import subprocess\n\
import platform\n\
from os.path import expanduser\n\
import zipfile\n\
import maya.utils\n\
import maya.cmds\n\
from functools import partial\n\
\n\
\n\
DEV = False\n\
INSTALL_SSGUI_ONLY = False\n\
\n\
MAYA_API_VERSION = int(str(cmds.about(apiVersion=True))[:4])\n\
\n\
ANIMBUDDY_GUI_RELEASE_PATH = 'https://github.com/darkuress/animBuddy/archive/release.zip'\n\
ANIMBUDDY_API_RELEASE_PATH = 'https://github.com/darkuress/python-api/archive/v1.0.4.zip'\n\
\n\
ScriptInstallPath = {\n\
    'Darwin': '{0}/Library/Preferences/Autodesk/maya/scripts/'.format(expanduser('~')),\n\
    'linux64': '$HOME/maya/scripts/',\n\
    'Windows': '{0}/maya/scripts/'.format(expanduser('~'))\n\
}\n\
\n\
\n\
\n\
PLATFORM = platform.system()\n\
MAYA_VERSION = cmds.about(apiVersion=True) / 10000\n\
IN_MAYA = False\n\
PYTHON_PATH = ''\n\
MAYA_SCRIPTS_PATH = ''\n\
FFMPEG_PATH = ''\n\
PIP_PATH = ''\n\
tmpdir = None\n\
delete_tmpdir = False\n\
cmd = ''\n\
\n\
if PLATFORM == 'Windows':\n\
    PYTHON_PATH = os.path.join(os.getenv('MAYA_LOCATION'), 'bin', 'mayapy.exe')\n\
    MAYA_SCRIPTS_PATH = ScriptInstallPath['Windows']\n\
    PIP_PATH = os.path.join(os.getenv('APPDATA'), 'Python', 'Scripts', 'pip2.7.exe')\n\
\n\
elif PLATFORM == 'Darwin':\n\
    PYTHON_PATH = '/usr/bin/python'\n\
    MAYA_SCRIPTS_PATH = ScriptInstallPath['Darwin']\n\
    PIP_PATH = os.path.join(expanduser('~'), 'Library', 'Python', '2.7', 'bin', 'pip2.7')\n\
\n\
\n\
ANIMBUDDY_INSTALL_PATH = '{0}animBuddy'.format(MAYA_SCRIPTS_PATH)\n\
\n\
print('MAYA_SCRIPTS_PATH: {0}'.format(MAYA_SCRIPTS_PATH))\n\
print('PYTHON_PATH: {0}'.format(PYTHON_PATH))\n\
print('PIP_PATH: {0}'.format(PIP_PATH))\n\
print('ANIMBUDDY_INSTALL_PATH: {0}'.format(ANIMBUDDY_INSTALL_PATH))\n\
\n\
        \n\
\n\
if tmpdir is None:\n\
    tmpdir = tempfile.mkdtemp()\n\
    delete_tmpdir = True\n\
\n\
# Save get-pip.py\n\
pipInstaller = os.path.join(tmpdir, 'get-pip.py')\n\
\n\
if PLATFORM == 'Darwin':\n\
    cmd = 'curl https://bootstrap.pypa.io/get-pip.py -o {0}'.format(pipInstaller).split(' ')\n\
    if not INSTALL_SSGUI_ONLY:\n\
        print('Calling shell command: {0}'.format(cmd))\n\
        print(subprocess.check_output(cmd))\n\
\n\
else:\n\
    # this should be using secure https, but we shoul dbe fine for now\n\
    # as we are only reading data, but might be a possible mid attack\n\
    response = urllib2.urlopen('https://bootstrap.pypa.io/get-pip.py')\n\
    data = response.read()\n\
    with open(pipInstaller, 'w') as f:\n\
        f.write(data)\n\
\n\
# Install pip\n\
filepath, filename = os.path.split(pipInstaller)\n\
sys.path.insert(0, filepath)\n\
if PLATFORM == 'Darwin':\n\
    cmd = '{0} {1} --user'.format('python2.7', pipInstaller).split(' ')\n\
else:\n\
    cmd = '{0} {1} --user'.format(PYTHON_PATH, pipInstaller).split(' ')\n\
print('Calling shell command: {0}'.format(cmd))\n\
print(subprocess.check_output(cmd))\n\
\n\
# Install Dependencies\n\
cmd = '{0} install --force-reinstall --user {1} pyyaml requests[security]'.format(PIP_PATH,\n\
                                                                                    ANIMBUDDY_API_RELEASE_PATH).split(\n\
    ' ')\n\
\n\
# Install SyncsketchGUI\n\
# * By using target, pip show won't find this package anymore\n\
\n\
if os.path.isdir(ANIMBUDDY_INSTALL_PATH):\n\
    shutil.rmtree(ANIMBUDDY_INSTALL_PATH, ignore_errors=True)\n\
    # todo: delete as well SyncsketchGUI-1.0.0.dist-info\n\
    print('Deleting previous directory for a clean install {0} '.format(ANIMBUDDY_INSTALL_PATH))\n\
\n\
cmd = '{0} install --upgrade --target={1} {2}'.format(PIP_PATH, MAYA_SCRIPTS_PATH,\n\
                                                                ANIMBUDDY_GUI_RELEASE_PATH).split(' ')\n\
print('Calling shell command: {0}'.format(cmd))\n\
print(subprocess.check_output(cmd))\n\
\n\
\n\
# Remove our temporary directory\n\
if delete_tmpdir and tmpdir:\n\
    print('cleaning up temporary files: {0}'.format(tmpdir))\n\
    shutil.rmtree(tmpdir, ignore_errors=True)\n\
");