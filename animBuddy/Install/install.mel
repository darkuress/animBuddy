python("\n\
import os\n\
import sys\n\
import shutil\n\
from maya import cmds\n\
from datetime import datetime, timedelta\n\
import glob\n\
import urllib2\n\
import tempfile\n\
import subprocess\n\
import platform\n\
from os.path import expanduser\n\
import zipfile\n\
import maya.cmds as cmds\n\
from functools import partial\n\
\n\
def run():\n\
    INSTALL_SSGUI_ONLY = False\n\
\n\
    MAYA_API_VERSION = int(str(cmds.about(apiVersion=True))[:4])\n\
\n\
    ANIMBUDDY_API_RELEASE_PATH = 'https://github.com/darkuress/animBuddy/archive/release.zip'\n\
\n\
    ScriptInstallPath = {\n\
        'Darwin': '{0}/Library/Preferences/Autodesk/maya/scripts/'.format(expanduser('~')),\n\
        'linux64': '$HOME/maya/scripts/',\n\
        'Windows': '{0}/maya/scripts/'.format(expanduser('~'))\n\
    }\n\
\n\
    PLATFORM = platform.system()\n\
    MAYA_VERSION = cmds.about(apiVersion=True) / 10000\n\
    PYTHON_PATH = ''\n\
    MAYA_SCRIPTS_PATH = ''\n\
    PIP_PATH = ''\n\
    tmpdir = None\n\
    delete_tmpdir = False\n\
    cmd = ''\n\
\n\
    if PLATFORM == 'Windows':\n\
        PYTHON_PATH = os.path.join(os.getenv('MAYA_LOCATION'), 'bin', 'mayapy.exe')\n\
        MAYA_SCRIPTS_PATH = ScriptInstallPath['Windows']\n\
        PIP_PATH = os.path.join(os.getenv('APPDATA'), 'Python', 'Scripts', 'pip2.7.exe')\n\
\n\
    elif PLATFORM == 'Darwin':\n\
        PYTHON_PATH = '/usr/bin/python'\n\
        MAYA_SCRIPTS_PATH = ScriptInstallPath['Darwin']\n\
        PIP_PATH = os.path.join(expanduser('~'), 'Library', 'Python', '2.7', 'bin', 'pip2.7')\n\
\n\
    if MAYA_SCRIPTS_PATH not in sys.path and MAYA_SCRIPTS_PATH[:-1] not in sys.path:\n\
        for pth in sys.path:\n\
            if 'maya/scripts' in pth:\n\
                MAYA_SCRIPTS_PATH = pth\n\
\n\
    ANIMBUDDY_INSTALL_PATH = os.path.join(MAYA_SCRIPTS_PATH, 'animBuddy') \n\
    REQUEST_INSTALL_PATH = os.path.join(MAYA_SCRIPTS_PATH, 'requests')\n\
\n\
    print('MAYA_SCRIPTS_PATH: {0}'.format(MAYA_SCRIPTS_PATH))\n\
    print('PYTHON_PATH: {0}'.format(PYTHON_PATH))\n\
    print('PIP_PATH: {0}'.format(PIP_PATH))\n\
    print('ANIMBUDDY_INSTALL_PATH: {0}'.format(ANIMBUDDY_INSTALL_PATH))\n\
\n\
            \n\
\n\
    if tmpdir is None:\n\
        tmpdir = tempfile.mkdtemp()\n\
        delete_tmpdir = True\n\
\n\
    # Save get-pip.py\n\
    pipInstaller = os.path.join(tmpdir, 'get-pip.py')\n\
\n\
    if PLATFORM == 'Darwin':\n\
        cmd = 'curl https://bootstrap.pypa.io/get-pip.py -o {0}'.format(pipInstaller).split(' ')\n\
        if not INSTALL_SSGUI_ONLY:\n\
            print('Calling shell command: {0}'.format(cmd))\n\
            print(subprocess.check_output(cmd))\n\
\n\
    else:\n\
        # this should be using secure https, but we shoul dbe fine for now\n\
        # as we are only reading data, but might be a possible mid attack\n\
        response = urllib2.urlopen('https://bootstrap.pypa.io/get-pip.py')\n\
        data = response.read()\n\
        with open(pipInstaller, 'w') as f:\n\
            f.write(data)\n\
\n\
    # Install pip\n\
    filepath, filename = os.path.split(pipInstaller)\n\
    sys.path.insert(0, filepath)\n\
\n\
    if not os.path.exists(PIP_PATH):\n\
        if PLATFORM == 'Darwin':\n\
            cmd = '{0} {1} --user'.format('python2.7', pipInstaller).split(' ')\n\
        else:\n\
            cmd = '{0} {1} --user'.format(PYTHON_PATH, pipInstaller).split(' ')\n\
        print('Calling shell command: {0}'.format(cmd))\n\
        print(subprocess.check_output(cmd))\n\
\n\
    # Install AnimBuddy\n\
    if os.path.exists(ANIMBUDDY_INSTALL_PATH):\n\
        shutil.rmtree(ANIMBUDDY_INSTALL_PATH)\n\
    #delete animBuddy-x.x.x.dist-info\n\
    ppath = os.path.dirname(ANIMBUDDY_INSTALL_PATH)\n\
    for fldr in os.listdir(ppath):\n\
        if fldr.startswith('animbuddy') and fldr.endswith('dist-info'):\n\
            shutil.rmtree(os.path.join(ppath, fldr))\n\
\n\
    cmd = '{0} install --force-reinstall --target={1} {2}'.format(PIP_PATH, MAYA_SCRIPTS_PATH,\n\
                                                                    ANIMBUDDY_API_RELEASE_PATH).split(' ')\n\
    print('Calling shell command: {0}'.format(cmd))\n\
    print(subprocess.check_output(cmd))\n\
\n\
    # Install Requests\n\
    cmd = '{0} install --force-reinstall --target={1} {2}'.format(PIP_PATH, REQUEST_INSTALL_PATH,\n\
                                                                    'requests').split(' ')\n\
    print('Calling shell command: {0}'.format(cmd))\n\
    print(subprocess.check_output(cmd))\n\
\n\
    # Remove our temporary directory\n\
    if delete_tmpdir and tmpdir:\n\
        print('cleaning up temporary files: {0}'.format(tmpdir))\n\
        shutil.rmtree(tmpdir, ignore_errors=True)\n\
\n\
    #adding to userSetup.py so that it runs when maya starts up\n\
    userSetupFile = os.path.join(MAYA_SCRIPTS_PATH, 'userSetup.py')\n\
    if not os.path.exists(userSetupFile):\n\
        f= open(userSetupFile,'w+')\n\
        f.close()\n\
\n\
    append = True\n\
    f = open(userSetupFile, 'r')\n\
    for line in f:\n\
        if 'ANIMBUDDYBOOLALA' in line:\n\
            append = False\n\
    f.close()\n\
\n\
    if append:\n\
        reqStr = REQUEST_INSTALL_PATH.replace('/', '//').replace('\\\\', '\\\\\\\\')\n\
        f = open(userSetupFile, 'a')\n\
        cmd = '\\n\\n#ANIMBUDDYBOOLALA\\n'\n\
        cmd += 'import maya.cmds as cmds\\n'\n\
        cmd += 'import sys\\n'\n\
        cmd += 'sys.path.append(\"{}\")\\n'.format(reqStr)\n\
        cmd += 'from animBuddy import UI\\n'\n\
        cmd += 'reload(UI)\\n'\n\
        cmd += 'x = UI.UI()\\n'\n\
        cmd += 'cmds.evalDeferred(\"x.loadInMaya()\")\\n'\n\
        f.write(cmd)\n\
        f.close()\n\
\n\
    sys.path.append(REQUEST_INSTALL_PATH)\n\
\n\
    from animBuddy import UI\n\
    reload(UI)\n\
    x = UI.UI()\n\
    x.loadInMaya()\n\
\n\
");